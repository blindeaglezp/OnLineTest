package com.zp.service.impl;

import java.util.List;

import com.zp.dao.impl.TestPaperDaoImpl;
import com.zp.model.ChoiceQuestion;
import com.zp.model.FillBlanksQuestion;
import com.zp.model.JudgeQuestion;
import com.zp.model.TestPaper;
import com.zp.service.TestPaperServiceI;
import com.zp.util.TestPaperData;

/**
 * 试卷信息操作业务层实现类
 * @author 盲鹰
 * @version 1.0
 */
public class TestPaperServiceImpl implements TestPaperServiceI {
	
	private ChoiceQuestion choiceQuestion = null;
	private JudgeQuestion judgeQuestion = null;
	private FillBlanksQuestion fillBlanksQuestion = null;

	@Override
	public List<TestPaper> queryTestPaperByCourseId(String courseId) {
		return new TestPaperDaoImpl().queryTestPaperByCourseId(courseId);
	}

	@Override
	public TestPaper queryTestPaperByTestPaperId(String testPaperId) {
		return new TestPaperDaoImpl().queryTestPaperByTestPaperId(testPaperId);
	}
	
	@Override
	public int findAndPackageMap(TestPaper testPaper) {
		String[] choiceQuestionIdArr = null;
		String[] judgeQuestionIdArr = null;
		String[] fillBlanksQuestionIdArr = null;
		int questionCount = 0;
		
		String choiceQuestionIds = testPaper.getChoicequestionId();
		if (choiceQuestionIds != null) {
			choiceQuestionIdArr = choiceQuestionIds.split(",");
			questionCount += choiceQuestionIdArr.length;
			for (int i = 0; i < choiceQuestionIdArr.length; i++) {
				choiceQuestion = new ChoiceQuestionServiceImpl().queryChoiceQuestionByQuestionId(Integer.parseInt(choiceQuestionIdArr[i]));
				TestPaperData.questions.put(i + 1, choiceQuestion);
			}
		}
		
		String judgeQuestionIds = testPaper.getJudgequestionId();
		if (judgeQuestionIds != null) {
			judgeQuestionIdArr = judgeQuestionIds.split(",");
			questionCount += judgeQuestionIdArr.length;
			for (int i = 0; i < judgeQuestionIdArr.length; i++) {
				judgeQuestion = new JudgeQuestionServiceImpl().queryJudgeQuestionByQuestionId(Integer.parseInt(judgeQuestionIdArr[i]));
				TestPaperData.questions.put(choiceQuestionIdArr.length + i + 1, judgeQuestion);
			}
		}
		
		String fillBlanksQuestionIds = testPaper.getFillblanksquestionId();
		if (fillBlanksQuestionIds != null) {
			fillBlanksQuestionIdArr = fillBlanksQuestionIds.split(",");
			questionCount += fillBlanksQuestionIdArr.length;
			for (int i = 0; i < fillBlanksQuestionIdArr.length; i++) {
				fillBlanksQuestion = new FillBlanksQuestionServiceImpl().queryFillBlanksQuestionByQuestionId(Integer.parseInt(fillBlanksQuestionIdArr[i]));
				TestPaperData.questions.put(choiceQuestionIdArr.length + judgeQuestionIdArr.length + i + 1, fillBlanksQuestion);
			}
		}
		
		return questionCount;
		
	}

}
