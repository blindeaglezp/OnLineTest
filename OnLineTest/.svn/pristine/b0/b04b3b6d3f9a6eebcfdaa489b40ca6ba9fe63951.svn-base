package com.zp.servlet;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.zp.model.Connect;
import com.zp.model.Course;
import com.zp.model.FriendLink;
import com.zp.model.TestPaper;
import com.zp.service.impl.ConnectServiceImpl;
import com.zp.service.impl.CourseServiceImpl;
import com.zp.service.impl.FriendLinkServiceImpl;
import com.zp.service.impl.TestPaperServiceImpl;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

/**
 * 学生界面处理
 * @author blindeagle
 * @version 1.0
 */
public class StudentServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		response.setCharacterEncoding("UTF-8");
		
		String type = request.getParameter("type");
		if ("stu_info".equals(type)) {
			request.getRequestDispatcher("/WEB-INF/jsp/student/information.jsp").forward(request, response);
		} else if ("stu_exam1".equals(type)) {
			request.getRequestDispatcher("/WEB-INF/jsp/student/exam1.jsp").forward(request, response);
		} else if ("stu_exam2".equals(type)) {
			String gradeId = request.getParameter("grade_id");
			List<Course> courses = new CourseServiceImpl().queryCourseByGradeId(gradeId);
			request.setAttribute("courses", courses);
			request.getRequestDispatcher("/WEB-INF/jsp/student/exam2.jsp").forward(request, response);
		} else if ("stu_exam3".equals(type)) {
			request.getRequestDispatcher("/WEB-INF/jsp/student/exam3.jsp").forward(request, response);
		} else if ("stu_grade".equals(type)) {
			request.getRequestDispatcher("/WEB-INF/jsp/student/grade.jsp").forward(request, response);
		} else if ("stu_friend".equals(type)) {
			List<FriendLink> friendLinks = new FriendLinkServiceImpl().queryAllFriendLink();
			request.setAttribute("friendLinks", friendLinks);
			request.getRequestDispatcher("/WEB-INF/jsp/student/friend.jsp").forward(request, response);
		} else if ("stu_connect".equals(type)) {
			List<Connect> connects = new ConnectServiceImpl().queryConnect();
			request.setAttribute("connects", connects);
			request.getRequestDispatcher("/WEB-INF/jsp/student/connect.jsp").forward(request, response);
		} else if ("query_testpaper_by_courseid".equals(type)) {
			String courseId = request.getParameter("courseid");
			List<TestPaper> testPapers = new TestPaperServiceImpl().queryTestPaperByCourseId(courseId);
			JSONArray result = JSONArray.fromObject(testPapers);
			response.getWriter().print(result);
		} else if ("query_testpaper_by_testpaperid".equals(type)) {
			String testPaperId = request.getParameter("testpaperid");
			TestPaper testPaper = new TestPaperServiceImpl().queryTestPaperByTestPaperId(testPaperId);
			request.getSession().setAttribute("testpaper", testPaper);
			JSONObject json = JSONObject.fromObject(testPaper);
			response.getWriter().print(json);
		}
	}

	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}

}
